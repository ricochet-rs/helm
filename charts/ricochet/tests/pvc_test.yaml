suite: persistent volume claims
templates:
  - pvc-cache.yaml
  - pvc-home.yaml
tests:
  # Cache PVC tests
  - it: should create cache PVC when enabled
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: true
      persistence.cache.size: 10Gi
      persistence.cache.accessMode: ReadWriteOnce
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: RELEASE-NAME-ricochet-cache
      - equal:
          path: spec.resources.requests.storage
          value: 10Gi
      - equal:
          path: spec.accessModes[0]
          value: ReadWriteOnce
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/component"]
          pattern: cache

  - it: should not create cache PVC when disabled
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should not create cache PVC when existingClaim is specified
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: true
      persistence.cache.existingClaim: existing-cache-pvc
    asserts:
      - hasDocuments:
          count: 0

  - it: should set cache storageClass when specified
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: true
      persistence.cache.storageClass: standard
      persistence.cache.size: 10Gi
    asserts:
      - equal:
          path: spec.storageClassName
          value: standard

  - it: should use default storageClass when dash is specified for cache
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: true
      persistence.cache.storageClass: '-'
      persistence.cache.size: 10Gi
    asserts:
      - equal:
          path: spec.storageClassName
          value: ''

  - it: should add annotations to cache PVC when specified
    template: pvc-cache.yaml
    set:
      persistence.cache.enabled: true
      persistence.cache.size: 10Gi
      persistence.cache.annotations:
        volume.beta.kubernetes.io/storage-class: standard
        backup.velero.io/backup-volumes: cache-storage
    asserts:
      - equal:
          path: metadata.annotations["volume.beta.kubernetes.io/storage-class"]
          value: standard
      - equal:
          path: metadata.annotations["backup.velero.io/backup-volumes"]
          value: cache-storage

  # Home PVC tests
  - it: should create home PVC when enabled
    template: pvc-home.yaml
    set:
      persistence.home.enabled: true
      persistence.home.size: 25Gi
      persistence.home.accessMode: ReadWriteOnce
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: RELEASE-NAME-ricochet-home
      - equal:
          path: spec.resources.requests.storage
          value: 25Gi
      - equal:
          path: spec.accessModes[0]
          value: ReadWriteOnce
      - matchRegex:
          path: metadata.labels["app.kubernetes.io/component"]
          pattern: home

  - it: should not create home PVC when disabled
    template: pvc-home.yaml
    set:
      persistence.home.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should not create home PVC when existingClaim is specified
    template: pvc-home.yaml
    set:
      persistence.home.enabled: true
      persistence.home.existingClaim: existing-home-pvc
    asserts:
      - hasDocuments:
          count: 0

  - it: should set home storageClass when specified
    template: pvc-home.yaml
    set:
      persistence.home.enabled: true
      persistence.home.storageClass: fast-ssd
      persistence.home.size: 25Gi
    asserts:
      - equal:
          path: spec.storageClassName
          value: fast-ssd

  - it: should use default storageClass when dash is specified for home
    template: pvc-home.yaml
    set:
      persistence.home.enabled: true
      persistence.home.storageClass: '-'
      persistence.home.size: 25Gi
    asserts:
      - equal:
          path: spec.storageClassName
          value: ''

  - it: should add annotations to home PVC when specified
    template: pvc-home.yaml
    set:
      persistence.home.enabled: true
      persistence.home.size: 25Gi
      persistence.home.annotations:
        volume.beta.kubernetes.io/storage-class: ssd
        backup.velero.io/backup-volumes: home-storage
    asserts:
      - equal:
          path: metadata.annotations["volume.beta.kubernetes.io/storage-class"]
          value: ssd
      - equal:
          path: metadata.annotations["backup.velero.io/backup-volumes"]
          value: home-storage
