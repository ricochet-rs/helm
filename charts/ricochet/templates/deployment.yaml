apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ricochet.fullname" . }}
  labels:
    {{- include "ricochet.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "ricochet.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if ne (len .Values.config) 0 }}
        checksum/config: {{ toYaml .Values.config | sha256sum }}
        {{- end }}
        {{- if .Values.config.secrets }}
        checksum/secret-config: {{ toYaml .Values.config.secrets | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ricochet.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ricochet.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if or .Values.initContainers .Values.persistence.home.enabled (ne (len .Values.config) 0) }}
      initContainers:
        {{- if .Values.persistence.home.enabled }}
        - name: fix-permissions
          image: busybox:1.36
          command: ['sh', '-c']
          args:
            - |
              mkdir -p {{ .Values.persistence.home.mountPath }}/content
              chown -R 1000:1000 {{ .Values.persistence.home.mountPath }}
              {{- if .Values.persistence.cache.enabled }}
              chown -R 1000:1000 {{ .Values.persistence.cache.mountPath }} || true
              {{- end }}
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            {{- if .Values.persistence.cache.enabled }}
            - name: cache-storage
              mountPath: {{ .Values.persistence.cache.mountPath }}
            {{- end }}
            {{- if .Values.persistence.home.enabled }}
            - name: home-storage
              mountPath: {{ .Values.persistence.home.mountPath }}
            {{- end }}
        {{- end }}
        {{- if ne (len .Values.config) 0 }}
        - name: merge-config
          image: busybox:1.36
          command: ['sh', '-c']
          args:
            - |
              # Create config directory
              mkdir -p /opt/ricochet/data

              # Start with base config
              if [ -f /config/ricochet-config.toml ]; then
                cp /config/ricochet-config.toml /opt/ricochet/data/ricochet-config.toml
              else
                touch /opt/ricochet/data/ricochet-config.toml
              fi

              {{- if .Values.config.secrets }}
              # Process secret references
              {{- range $section, $secretRefs := .Values.config.secrets }}
              {{- range $key, $ref := $secretRefs }}
              {{- if kindOf $ref | eq "map" }}
              {{- if $ref.secretName }}

              # Fetch secret value for {{ $section }}.{{ $key }}
              SECRET_VALUE=$(cat /secrets/{{ $ref.secretName }}/{{ $ref.key | default $key }} 2>/dev/null || echo "")
              if [ -n "$SECRET_VALUE" ]; then
                # Append to config if not already present
                if ! grep -q "^\[{{ $section }}\]" /opt/ricochet/data/ricochet-config.toml; then
                  echo "" >> /opt/ricochet/data/ricochet-config.toml
                  echo "[{{ $section }}]" >> /opt/ricochet/data/ricochet-config.toml
                fi
                echo '{{ $key }} = "'$SECRET_VALUE'"' >> /opt/ricochet/data/ricochet-config.toml
              fi
              {{- end }}
              {{- else }}
              # Simple secret reference for {{ $section }}.{{ $key }}
              SECRET_VALUE=$(cat /secrets/{{ $ref }}/{{ $key }} 2>/dev/null || echo "")
              if [ -n "$SECRET_VALUE" ]; then
                if ! grep -q "^\[{{ $section }}\]" /opt/ricochet/data/ricochet-config.toml; then
                  echo "" >> /opt/ricochet/data/ricochet-config.toml
                  echo "[{{ $section }}]" >> /opt/ricochet/data/ricochet-config.toml
                fi
                echo '{{ $key }} = "'$SECRET_VALUE'"' >> /opt/ricochet/data/ricochet-config.toml
              fi
              {{- end }}
              {{- end }}
              {{- end }}
              {{- end }}

              # Set proper permissions
              chown -R 1000:1000 /opt/ricochet/data
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            {{- if ne (len .Values.config) 0 }}
            - name: config
              mountPath: /config
            {{- end }}
            {{- if .Values.config.secrets }}
            {{- $uniqueSecrets := dict }}
            {{- range $section, $secretRefs := .Values.config.secrets }}
            {{- range $key, $ref := $secretRefs }}
            {{- if kindOf $ref | eq "map" }}
            {{- if $ref.secretName }}
            {{- $_ := set $uniqueSecrets $ref.secretName true }}
            {{- end }}
            {{- else }}
            {{- $_ := set $uniqueSecrets $ref true }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range $secretName, $_ := $uniqueSecrets }}
            - name: secret-{{ $secretName }}
              mountPath: /secrets/{{ $secretName }}
            {{- end }}
            {{- end }}
            {{- if .Values.persistence.home.enabled }}
            - name: home-storage
              mountPath: {{ .Values.persistence.home.mountPath }}
            {{- else }}
            - name: config-merged
              mountPath: /opt/ricochet/data
            {{- end }}
        {{- end }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: {{ include "ricochet.image" . }}
          imagePullPolicy: {{ include "ricochet.imagePullPolicy" . }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: {{ .Values.service.protocol }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.cache.enabled }}
            - name: cache-storage
              mountPath: {{ .Values.persistence.cache.mountPath }}
            {{- end }}
            {{- if .Values.persistence.home.enabled }}
            - name: home-storage
              mountPath: {{ .Values.persistence.home.mountPath }}
            {{- else if ne (len .Values.config) 0 }}
            - name: config-merged
              mountPath: /opt/ricochet/data
            {{- end }}
            {{- if .Values.execEnv.config }}
            - name: exec-env-config
              mountPath: /var/lib/ricochet/data/ricochet-exec-env.toml
              subPath: ricochet-exec-env.toml
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.persistence.cache.enabled }}
        - name: cache-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.cache.existingClaim | default (printf "%s-cache" (include "ricochet.fullname" .)) }}
        {{- end }}
        {{- if .Values.persistence.home.enabled }}
        - name: home-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.home.existingClaim | default (printf "%s-home" (include "ricochet.fullname" .)) }}
        {{- end }}
        {{- if ne (len .Values.config) 0 }}
        - name: config
          configMap:
            name: {{ .Values.existingConfigMap | default (printf "%s-config" (include "ricochet.fullname" .)) }}
        {{- end }}
        {{- if .Values.config.secrets }}
        {{- $uniqueSecrets := dict }}
        {{- range $section, $secretRefs := .Values.config.secrets }}
        {{- range $key, $ref := $secretRefs }}
        {{- if kindOf $ref | eq "map" }}
        {{- if $ref.secretName }}
        {{- $_ := set $uniqueSecrets $ref.secretName true }}
        {{- end }}
        {{- else }}
        {{- $_ := set $uniqueSecrets $ref true }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- range $secretName, $_ := $uniqueSecrets }}
        - name: secret-{{ $secretName }}
          secret:
            secretName: {{ $secretName }}
        {{- end }}
        {{- end }}
        {{- if and (ne (len .Values.config) 0) (not .Values.persistence.home.enabled) }}
        - name: config-merged
          emptyDir: {}
        {{- end }}
        {{- if .Values.execEnv.config }}
        - name: exec-env-config
          configMap:
            name: {{ include "ricochet.fullname" . }}-exec-env
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
